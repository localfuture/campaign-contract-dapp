{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/mnt/d/Protfolio Projects/campaign/pages/index.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport factory from '../Ethereum/factory';\n\nfunction App() {\n  _s();\n\n  const [manager, setmanager] = useState('');\n  const [players, setplayers] = useState([]);\n  const [balance, setBalance] = useState('');\n  const [fund, setFund] = useState(0);\n  const [message, setmessage] = useState('');\n  const [lastwinner, setlastwinner] = useState('');\n  useEffect(() => {\n    async function fetchManager() {\n      const managerAddress = await lottery.methods.manager().call();\n      setmanager(managerAddress);\n    }\n\n    async function fetchLastWinner() {\n      const lastWinnerAddress = await lottery.methods.lastWinner().call();\n      setlastwinner(lastWinnerAddress);\n    }\n\n    async function fetchPlayers() {\n      const playerAddress = await lottery.methods.getPlayers().call();\n      setplayers(playerAddress);\n    }\n\n    async function fetchBalance() {\n      const contractBalance = await web3.eth.getBalance(lottery.options.address);\n      setBalance(contractBalance);\n    }\n\n    fetchManager();\n    fetchPlayers();\n    fetchBalance();\n    fetchLastWinner();\n  }, []);\n\n  async function connectToMetMask() {\n    window.ethereum.enable().then(result => {\n      console.log(result);\n      ;\n    });\n  }\n\n  async function onSubmit(event) {\n    event.preventDefault();\n    web3.eth.getAccounts().then(function (accounts) {\n      console.log(\"accounts\", accounts[0]);\n      setmessage('Waiting on transaction success...');\n      lottery.methods.enter().send({\n        from: accounts[0],\n        value: web3.utils.toWei(fund, 'ether')\n      }).then(function (result, error) {\n        if (!error) {\n          setmessage('You have been entered! ');\n          console.log(result);\n        } else {\n          console.log(error);\n        }\n      });\n    });\n  }\n\n  async function pickWinner() {\n    const [account] = await web3.eth.getAccounts();\n    setmessage('Picking winner! Please wait...');\n    await lottery.methods.pickWinner().send({\n      from: account\n    }).then(function (result, error) {\n      if (!error) {\n        setmessage('Winner has been picked! ');\n        console.log(result);\n      } else {\n        console.log(error);\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Lottery Contract\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: connectToMetMask,\n      children: \"Connect to MetaMask\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"This contract is managed by \", manager, \".\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"There are currently \", players.length, \" people entered, competing to win \", web3.utils.fromWei(balance, 'ether'), \" ether!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Want to try your luck?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Amount of ether to enter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"fund\",\n            onChange: e => setFund(e.target.value),\n            value: fund\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Enter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Ready to pick a winner? \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: pickWinner,\n      children: \"Pick Winner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"Last Winner was \", lastwinner]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"+OTuiVjyFoLBIZPnRVgoeyfXCMU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/mnt/d/Protfolio Projects/campaign/pages/index.js"],"names":["React","factory","App","manager","setmanager","useState","players","setplayers","balance","setBalance","fund","setFund","message","setmessage","lastwinner","setlastwinner","useEffect","fetchManager","managerAddress","lottery","methods","call","fetchLastWinner","lastWinnerAddress","lastWinner","fetchPlayers","playerAddress","getPlayers","fetchBalance","contractBalance","web3","eth","getBalance","options","address","connectToMetMask","window","ethereum","enable","then","result","console","log","onSubmit","event","preventDefault","getAccounts","accounts","enter","send","from","value","utils","toWei","error","pickWinner","account","length","fromWei","e","target"],"mappings":"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","sourcesContent":["import React from 'react';\nimport factory from '../Ethereum/factory';\n\nfunction App() {\n    const [manager, setmanager] = useState('');\n    const [players, setplayers] = useState([]);\n    const [balance, setBalance] = useState('');\n    const [fund, setFund] = useState(0);\n    const [message, setmessage] = useState('');\n    const [lastwinner, setlastwinner] = useState('');\n\n    useEffect(() => {\n      async function fetchManager() {\n        const managerAddress = await lottery.methods.manager().call();\n        setmanager(managerAddress);\n      }\n\n      async function fetchLastWinner() {\n        const lastWinnerAddress = await lottery.methods.lastWinner().call();\n        setlastwinner(lastWinnerAddress);\n      }\n\n      async function fetchPlayers() {\n        const playerAddress = await lottery.methods.getPlayers().call();\n        setplayers(playerAddress);\n      }\n\n      async function fetchBalance() {\n        const contractBalance = await web3.eth.getBalance(lottery.options.address);\n        setBalance(contractBalance);\n      }\n\n      fetchManager();\n      fetchPlayers();\n      fetchBalance();\n      fetchLastWinner();\n    }, []);\n\n    async function connectToMetMask() {\n      window.ethereum.enable().then(result => {\n        console.log(result);;\n      });\n    }\n\n    async function onSubmit(event) {\n      event.preventDefault();\n\n      web3.eth.getAccounts().then(function (accounts) {\n        console.log(\"accounts\", accounts[0]);\n        setmessage('Waiting on transaction success...');\n        lottery.methods.enter().send({\n          from: accounts[0],\n          value: web3.utils.toWei(fund, 'ether')\n        })\n          .then(function (result, error) {\n            if (!error) {\n              setmessage('You have been entered! ');\n              console.log(result);\n            } else {\n              console.log(error);\n            }\n          });\n      });\n    }\n\n    async function pickWinner() {\n      const [account] = await web3.eth.getAccounts();\n\n      setmessage('Picking winner! Please wait...');\n      await lottery.methods.pickWinner().send({\n        from: account\n      }).then(function (result, error) {\n        if (!error) {\n          setmessage('Winner has been picked! ');\n          console.log(result);\n        } else {\n          console.log(error);\n        }\n      });\n\n    }\n\n    return (\n      <>\n        <h1>Lottery Contract</h1>\n        <button onClick={connectToMetMask}>Connect to MetaMask</button>\n        <p>\n          This contract is managed by {manager}.\n        </p>\n        <p>\n          There are currently {players.length} people entered,\n          competing to win {web3.utils.fromWei(balance, 'ether')} ether!\n        </p>\n        <hr />\n        <form onSubmit={onSubmit}>\n          <h4>Want to try your luck?</h4>\n          <div>\n            <label>Amount of ether to enter</label>\n            <div>\n              <input name=\"fund\" onChange={e => setFund(e.target.value)} value={fund} />\n            </div>\n          </div>\n          <button>Enter</button>\n        </form>\n        <hr/>\n          <h4>Ready to pick a winner? </h4>\n          <button onClick={pickWinner}>Pick Winner</button>\n        <hr />\n          <h4>Last Winner was {lastwinner}</h4>\n        <hr />\n          <h1>{message}</h1>\n\n      </>\n    );\n  }\n\n  export default App;\n"]},"metadata":{},"sourceType":"module"}