{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/mnt/d/Protfolio Projects/campaign/pages/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport factory from '../Ethereum/factory';\nimport { Container, Header } from 'semantic-ui-react';\nimport { Card } from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css';\n\nfunction Campaign() {\n  _s();\n\n  const {\n    0: campaignAddress,\n    1: setcampaignAddress\n  } = useState([]);\n  useEffect(() => {\n    async function getDeployedCampaigns() {\n      const campaignAdd = await factory.methods.getDeployedCampaigns().call();\n      const item = campaignAdd.map(address => {\n        return {\n          header: address,\n          description: /*#__PURE__*/_jsxDEV(\"a\", {\n            children: \"View Campaign\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 30\n          }, this),\n          fluid: true\n        };\n      });\n      setcampaignAddress(item);\n    }\n\n    getDeployedCampaigns();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        as: \"h2\",\n        children: \"Campaign Contract\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Card.Group, {\n        items: campaignAddress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(Campaign, \"3+r92Z8P497boOdRoL3zbeeyTr0=\");\n\n_c = Campaign;\nexport default Campaign;\n\nvar _c;\n\n$RefreshReg$(_c, \"Campaign\");","map":{"version":3,"sources":["/mnt/d/Protfolio Projects/campaign/pages/index.js"],"names":["React","useState","useEffect","factory","Container","Header","Card","Campaign","campaignAddress","setcampaignAddress","getDeployedCampaigns","campaignAdd","methods","call","item","map","address","header","description","fluid"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,SAASC,SAAT,EAAoBC,MAApB,QAAkC,mBAAlC;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,OAAO,kCAAP;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAChB,QAAM;AAAA,OAACC,eAAD;AAAA,OAAkBC;AAAlB,MAAwCR,QAAQ,CAAC,EAAD,CAAtD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAeQ,oBAAf,GAAsC;AAClC,YAAMC,WAAW,GAAG,MAAMR,OAAO,CAACS,OAAR,CAAgBF,oBAAhB,GAAuCG,IAAvC,EAA1B;AACA,YAAMC,IAAI,GAAGH,WAAW,CAACI,GAAZ,CAAgBC,OAAO,IAAI;AACtC,eAAO;AACLC,UAAAA,MAAM,EAAED,OADH;AAELE,UAAAA,WAAW,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFR;AAGLC,UAAAA,KAAK,EAAE;AAHF,SAAP;AAKD,OANY,CAAb;AAQAV,MAAAA,kBAAkB,CAACK,IAAD,CAAlB;AACD;;AAEHJ,IAAAA,oBAAoB;AACvB,GAfQ,EAeP,EAfO,CAAT;AAiBA,sBACE;AAAA,2BACE,QAAC,SAAD;AAAW,MAAA,KAAK,MAAhB;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,EAAE,EAAC,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,KAAK,EAAEF;AAAnB;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAQD;;GA5BMD,Q;;KAAAA,Q;AA8BP,eAAeA,QAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport factory from '../Ethereum/factory';\nimport { Container, Header } from 'semantic-ui-react'\nimport { Card } from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css';\n\nfunction Campaign() {\n    const [campaignAddress, setcampaignAddress] = useState([]);\n\n    useEffect(() => {\n        async function getDeployedCampaigns() {\n            const campaignAdd = await factory.methods.getDeployedCampaigns().call();\n            const item = campaignAdd.map(address => {\n              return {\n                header: address,\n                description: <a>View Campaign</a>,\n                fluid: true\n              };\n            });\n\n            setcampaignAddress(item);\n          }\n\n        getDeployedCampaigns();\n    },[]);\n\n    return (\n      <>\n        <Container fluid>\n          <Header as='h2'>Campaign Contract</Header>\n          <Card.Group items={campaignAddress} />\n        </Container>\n      </>\n    );\n  }\n\n  export default Campaign;\n"]},"metadata":{},"sourceType":"module"}