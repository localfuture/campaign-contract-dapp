{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/mnt/d/Protfolio Projects/campaign/pages/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport factory from '../Ethereum/factory';\n\nfunction Campaign() {\n  const {\n    0: campaignAddress,\n    1: setcampaignAddress\n  } = useState([]);\n  useEffect(() => {\n    async function getDeployedCampaigns() {\n      const campaignAdd = await factory.methods.getDeployedCampaigns().call();\n      setcampaignAddress(campaignAdd);\n    }\n\n    getDeployedCampaigns();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Campaign Contract\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: campaignAddress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\nexport default Campaign;","map":{"version":3,"sources":["/mnt/d/Protfolio Projects/campaign/pages/index.js"],"names":["React","useState","useEffect","factory","Campaign","campaignAddress","setcampaignAddress","getDeployedCampaigns","campaignAdd","methods","call"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,OAAP,MAAoB,qBAApB;;AAEA,SAASC,QAAT,GAAoB;AAChB,QAAM;AAAA,OAACC,eAAD;AAAA,OAAkBC;AAAlB,MAAwCL,QAAQ,CAAC,EAAD,CAAtD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAeK,oBAAf,GAAsC;AAClC,YAAMC,WAAW,GAAG,MAAML,OAAO,CAACM,OAAR,CAAgBF,oBAAhB,GAAuCG,IAAvC,EAA1B;AACAJ,MAAAA,kBAAkB,CAACE,WAAD,CAAlB;AACD;;AAEHD,IAAAA,oBAAoB;AACvB,GAPQ,EAOP,EAPO,CAAT;AASA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAAIF;AAAJ;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAMD;;AAED,eAAeD,QAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport factory from '../Ethereum/factory';\n\nfunction Campaign() {\n    const [campaignAddress, setcampaignAddress] = useState([]);\n\n    useEffect(() => {\n        async function getDeployedCampaigns() {\n            const campaignAdd = await factory.methods.getDeployedCampaigns().call();\n            setcampaignAddress(campaignAdd);\n          }\n\n        getDeployedCampaigns();\n    },[]);\n\n    return (\n      <>\n        <h1>Campaign Contract</h1>\n        <p>{campaignAddress}</p>\n      </>\n    );\n  }\n\n  export default Campaign;\n"]},"metadata":{},"sourceType":"module"}