{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/mnt/d/Protfolio Projects/campaign/pages/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport factory from '../Ethereum/factory';\n\nfunction Campaign() {\n  _s();\n\n  useEffect(() => {\n    async function getDeployedCampaigns() {\n      const managerAddress = await lottery.methods.manager().call();\n      setmanager(managerAddress);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Campaign Contract\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(Campaign, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Campaign;\nexport default Campaign;\n\nvar _c;\n\n$RefreshReg$(_c, \"Campaign\");","map":{"version":3,"sources":["/mnt/d/Protfolio Projects/campaign/pages/index.js"],"names":["React","useEffect","factory","Campaign","getDeployedCampaigns","managerAddress","lottery","methods","manager","call","setmanager"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,OAAP,MAAoB,qBAApB;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAChBF,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAeG,oBAAf,GAAsC;AAClC,YAAMC,cAAc,GAAG,MAAMC,OAAO,CAACC,OAAR,CAAgBC,OAAhB,GAA0BC,IAA1B,EAA7B;AACAC,MAAAA,UAAU,CAACL,cAAD,CAAV;AACD;AACN,GALQ,CAAT;AAOA,sBACE;AAAA,2BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAKD;;GAbMF,Q;;KAAAA,Q;AAeP,eAAeA,QAAf","sourcesContent":["import React, {useEffect} from 'react';\nimport factory from '../Ethereum/factory';\n\nfunction Campaign() {\n    useEffect(() => {\n        async function getDeployedCampaigns() {\n            const managerAddress = await lottery.methods.manager().call();\n            setmanager(managerAddress);\n          }\n    });\n\n    return (\n      <>\n        <h1>Campaign Contract</h1>\n      </>\n    );\n  }\n\n  export default Campaign;\n"]},"metadata":{},"sourceType":"module"}